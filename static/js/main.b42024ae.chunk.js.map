{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/images-api.jsx","images/error.jpg","components/ImageError/ImageError.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/ImageInfo/ImageInfo.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","event","preventDefault","trim","toast","warning","type","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","onClose","srcModal","alt","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","target","src","ImageGalleryItem","showModal","setShowModal","toggleModal","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","ImageError","message","role","errorImage","width","Button","App","color","height","Component","ImageInfo","setImages","setPage","status","setStatus","error","setError","imagesAPI","hits","length","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","total","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b42024ae.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.warning('Please fill in the search field!');\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <>\n      <header className=\"Searchbar\">\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={imageName}\n            onChange={handleNameChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    </>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, srcModal, alt }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={srcModal} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  alt: PropTypes.string.isRequired,\n  srcModal: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ src, alt, srcModal }) {\n  const [showModal, setShowModal] = useState(false);\n \n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <>\n      <li className=\"ImageGalleryItem\">\n        <img\n          onClick={toggleModal}\n          src={src}\n          alt={alt}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n\n      {showModal && (\n        <Modal onClose={toggleModal} srcModal={srcModal} alt={alt} />\n      )}\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  srcModal: PropTypes.string.isRequired,\n};\n\n/* export default class ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    srcModal: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { src, alt, srcModal } = this.props;\n    const { showModal } = this.state;\n    return (\n      <>\n        <li className=\"ImageGalleryItem\">\n          <img\n            onClick={this.toggleModal}\n            src={src}\n            alt={alt}\n            className=\"ImageGalleryItem-image\"\n          />\n        </li>\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} srcModal={srcModal} alt={alt} />\n        )}\n      </>\n    );\n  }\n} */\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ images }) {\n  return (\n    <div className=\"ImageGalleryContainer\">\n      <ul className=\"ImageGallery\">\n        {images.map(image => (\n          <ImageGalleryItem\n            key={image.id}\n            src={image.webformatURL}\n            srcModal={image.largeImageURL}\n            alt={image.tags}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\nexport default ImageGallery;\n","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '19886282-56444a5241ae61181bc861379';\n\nfunction fetchImages(name, page) {\n  return fetch(\n    `${BASE_URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject();\n  });\n}\n\nconst api = {\n  fetchImages,\n};\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/error.71eb184f.jpg\";","import errorImage from '../../images/error.jpg';\n\nexport default function ImageError({ message }) {\n  return (\n    <div role=\"alert\">\n      <img src={errorImage} width=\"800\" alt=\"bad cat\" className=\"ImageError\" />\n      <p>{message}</p>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"BtnContainer\">\n      <button onClick={onClick} className=\"Button\" type=\"button\">\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  //other logic\n  render() {\n    return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={400} width={200} />;\n  }\n}\n","import { useEffect, useState } from 'react';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport imagesAPI from '../../services/images-api';\nimport ImageError from '../ImageError/ImageError';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\n\nexport default function ImageInfo({\n  imageName,\n  images,\n  setImages,\n  page,\n  setPage,\n}) {\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n    setStatus('pending');\n\n    imagesAPI\n      .fetchImages(imageName, page)\n      .then(images => {\n        if (images.hits.length !== 0) {\n          setImages(prevState => [...prevState, ...images.hits]);\n          setStatus('resolved');\n        }\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [imageName, setImages, page]);\n\n  const onClickLoadMore = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  if (status === 'idle') {\n    return <div className=\"IdleMessage\">Please enter data to search field</div>;\n  }\n  if (status === 'rejected') {\n    return <ImageError message={error.message} />;\n  }\n  if (images.total === 0) {\n    return (\n      <div>Image was not found. Please, change your request and try again.</div>\n    );\n  }\n\n  return (\n    <>\n      <ImageGallery images={images} />\n      {status === 'pending' ? <Loader /> : <Button onClick={onClickLoadMore} />}\n    </>\n  );\n}\n\nImageInfo.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageInfo from './components/ImageInfo/ImageInfo';\nimport './App.css';\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n    setImages([]);\n    setPage(1);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageInfo\n        imageName={imageName}\n        images={images}\n        page={page}\n        setImages={setImages}\n        setPage={setPage}\n      />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n\n/* class App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App; */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}